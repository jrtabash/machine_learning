In [5]: %run machine_learning/metro_traffic/metro_traffic.py

xl, xt, yl, yt = getDataForNeuralNetworkModel(standardScaler=True, squashHoliday=False, dropDescription=True)

In [109]: model = makeNeuralNetworkModel(xl, yl, epochs=20, layers=[(27, 'relu'), (10, 'sigmoid'), (5, 'softmax')])
Epoch 1/20
30431/30431 [==============================] - 1s 38us/sample - loss: 1.3697 - acc: 0.4032
Epoch 2/20
30431/30431 [==============================] - 1s 33us/sample - loss: 1.0210 - acc: 0.5686
Epoch 3/20
30431/30431 [==============================] - 1s 34us/sample - loss: 0.8454 - acc: 0.6190
Epoch 4/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.7655 - acc: 0.6629
Epoch 5/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.7180 - acc: 0.6950
Epoch 6/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.6815 - acc: 0.7249
Epoch 7/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.6451 - acc: 0.7583
Epoch 8/20
30431/30431 [==============================] - 1s 36us/sample - loss: 0.6077 - acc: 0.7850
Epoch 9/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.5738 - acc: 0.8161
Epoch 10/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.5455 - acc: 0.8332
Epoch 11/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.5211 - acc: 0.8423
Epoch 12/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.5026 - acc: 0.8452
Epoch 13/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4876 - acc: 0.8475
Epoch 14/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4758 - acc: 0.8493
Epoch 15/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4669 - acc: 0.8512
Epoch 16/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4591 - acc: 0.8492
Epoch 17/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4540 - acc: 0.8519
Epoch 18/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4494 - acc: 0.8514
Epoch 19/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4453 - acc: 0.8531
Epoch 20/20
30431/30431 [==============================] - 1s 37us/sample - loss: 0.4422 - acc: 0.8532

In [110]: model.evaluate(xt.values, yt.values.ravel())
10144/10144 [==============================] - 0s 40us/sample - loss: 0.4476 - acc: 0.8496
Out[110]: [0.4476096204684736, 0.8495662]

In [111]: nnPredict(model, xt.values[:1])
Out[111]: [3]

In [112]: nnPredictLabels(model, xt.values[:1])
Out[112]: ['High']

In [113]: nnPredictionLabel(yt.values.ravel()[0])
Out[113]: 'High'

In [114]:
